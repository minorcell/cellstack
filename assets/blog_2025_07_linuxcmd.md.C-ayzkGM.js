import{_ as e,c as l,o as i,a6 as d}from"./chunks/framework.CBA1pFat.js";const c="/assets/014.DPhjm1RL.webp",h=JSON.parse('{"title":"Linux 命令行宝典：50个开发者必掎核心工具","description":"最实用的 Linux 命令行完全指南，精选 50 个核心命令工具。系统性覆盖文件操作、进程管理、网络诊断、文本处理等方面，帮助开发者和运维工程师构建扎实的命令行技能。","frontmatter":{"title":"Linux 命令行宝典：50个开发者必掎核心工具","description":"最实用的 Linux 命令行完全指南，精选 50 个核心命令工具。系统性覆盖文件操作、进程管理、网络诊断、文本处理等方面，帮助开发者和运维工程师构建扎实的命令行技能。","tags":["Linux命令","命令行工具","Linux系统","系统管理","运维开发","DevOps","Shell","Bash","服务器管理","文本处理","进程管理","网络诊断"],"author":"mCell","head":[["link",{"rel":"canonical","href":"https://stack.mcell.topblog/2025/07_linuxcmd"}],["meta",{"property":"og:url","content":"https://stack.mcell.topblog/2025/07_linuxcmd"}]]},"headers":[],"relativePath":"blog/2025/07_linuxcmd.md","filePath":"blog/2025/07_linuxcmd.md","lastUpdated":1756227164000}'),t={name:"blog/2025/07_linuxcmd.md"};function s(a,o,r,n,p,u){return i(),l("div",null,o[0]||(o[0]=[d('<p><img src="'+c+'" alt="014.webp" loading="lazy"></p><h1 id="精通-linux-开发者必备的-50-个核心命令行工具" tabindex="-1">精通 Linux：开发者必备的 50 个核心命令行工具 <a class="header-anchor" href="#精通-linux-开发者必备的-50-个核心命令行工具" aria-label="Permalink to &quot;精通 Linux：开发者必备的 50 个核心命令行工具&quot;">​</a></h1><blockquote><p>在图形界面日益强大的今天，为什么我们仍需精通命令行？因为在云服务器、Docker 容器和自动化脚本的世界里，命令行是与系统交互最直接、最高效的语言。无论是服务部署、故障排查，还是性能监控，命令行都是开发者不可或缺的核心技能。</p></blockquote><p>本文为你精选了 50 个在开发与运维工作中频繁使用的 Linux 命令。我们摒弃了晦涩的参数列表，聚焦于最实用的场景和用法，希望能成为你日常工作中的得力助手。</p><h3 id="文件与目录操作-构建工作区的基础" tabindex="-1">文件与目录操作：构建工作区的基础 <a class="header-anchor" href="#文件与目录操作-构建工作区的基础" aria-label="Permalink to &quot;文件与目录操作：构建工作区的基础&quot;">​</a></h3><p>这是每个 Linux 用户的起点，用于在文件系统中导航和组织文件。</p><ol><li><p><strong><code>ls</code></strong> - 列出目录内容</p><ul><li><code>ls -l</code>: 以长列表格式显示，包含权限、所有者、大小、修改日期等详细信息。</li><li><code>ls -a</code>: 显示所有文件，包括以 <code>.</code> 开头的隐藏文件。</li><li><code>ls -lh</code>: 结合 <code>-l</code> 和 <code>-h</code> (human-readable)，以更易读的单位（如 KB, MB）显示文件大小。</li></ul></li><li><p><strong><code>cd</code></strong> - 切换目录</p><ul><li><code>cd /var/log</code>: 进入指定目录。</li><li><code>cd ..</code>: 返回上一级目录。</li><li><code>cd ~</code> 或 <code>cd</code>: 返回当前用户的主目录。</li></ul></li><li><p><strong><code>pwd</code></strong> - 显示当前工作目录的绝对路径。</p></li><li><p><strong><code>mkdir</code></strong> - 创建新目录</p><ul><li><code>mkdir myapp</code>: 创建一个名为 <code>myapp</code> 的目录。</li><li><code>mkdir -p myapp/logs</code>: <code>-p</code> 参数可以递归创建多层目录。</li></ul></li><li><p><strong><code>touch</code></strong> - 创建空文件或更新文件时间戳。</p><ul><li><code>touch config.js</code>: 如果文件不存在，则创建一个空的 <code>config.js</code> 文件。</li></ul></li><li><p><strong><code>cp</code></strong> - 复制文件或目录</p><ul><li><code>cp source.txt destination.txt</code>: 复制文件。</li><li><code>cp -r src_dir/ dest_dir/</code>: <code>-r</code> 参数用于递归复制整个目录。</li></ul></li><li><p><strong><code>mv</code></strong> - 移动或重命名文件/目录。</p><ul><li><code>mv old_name.txt new_name.txt</code>: 重命名文件。</li><li><code>mv my_file.txt /tmp/</code>: 将文件移动到 <code>/tmp</code> 目录。</li></ul></li><li><p><strong><code>rm</code></strong> - 删除文件或目录</p><ul><li><code>rm file.txt</code>: 删除文件。</li><li><code>rm -r old_dir</code>: <code>-r</code> 参数用于递归删除目录。</li><li><code>rm -rf data/</code>: <code>-f</code> (force) 参数将强制删除，无提示。<strong>此命令极其危险，使用前请再三确认路径。</strong></li></ul></li></ol><h3 id="文本查看与搜索-洞察文件内容" tabindex="-1">文本查看与搜索：洞察文件内容 <a class="header-anchor" href="#文本查看与搜索-洞察文件内容" aria-label="Permalink to &quot;文本查看与搜索：洞察文件内容&quot;">​</a></h3><p>日志分析、配置检查都离不开对文本内容的操作。</p><ol start="9"><li><p><strong><code>cat</code></strong> - 查看文件全部内容（适用于小文件）。</p></li><li><p><strong><code>less</code></strong> - 分页查看文件内容（适用于大文件），支持上下滚动和搜索。</p></li><li><p><strong><code>head</code> / <code>tail</code></strong> - 查看文件的开头/结尾部分。</p><ul><li><code>head -n 20 app.log</code>: 查看日志文件的前 20 行。</li><li><code>tail -n 20 app.log</code>: 查看日志文件的末尾 20 行。</li><li><code>tail -f app.log</code>: <code>-f</code> (follow) 参数可以实时跟踪文件的新增内容，是查看实时日志的神器。</li></ul></li><li><p><strong><code>grep</code></strong> - 在文本中搜索匹配的行。</p><ul><li><code>grep &quot;error&quot; /var/log/syslog</code>: 在 <code>syslog</code> 文件中搜索包含 &quot;error&quot; 的行。</li><li><code>grep -i &quot;error&quot; app.log</code>: <code>-i</code> 参数表示忽略大小写。</li><li><code>grep -r &quot;API_KEY&quot; .</code>: <code>-r</code> 参数表示在当前目录下递归搜索。</li></ul></li><li><p><strong><code>find</code></strong> - 在文件系统中查找文件。</p><ul><li><code>find /etc -name &quot;*.conf&quot;</code>: 在 <code>/etc</code> 目录下查找所有以 <code>.conf</code> 结尾的文件。</li><li><code>find . -type f -mtime -7</code>: 查找当前目录下 7 天内修改过的文件。</li></ul></li></ol><h3 id="进程管理-掌控系统运行状态" tabindex="-1">进程管理：掌控系统运行状态 <a class="header-anchor" href="#进程管理-掌控系统运行状态" aria-label="Permalink to &quot;进程管理：掌控系统运行状态&quot;">​</a></h3><p>当服务变慢或无响应时，你需要这些命令来诊断问题。</p><ol start="14"><li><p><strong><code>ps</code></strong> - 显示当前用户的活动进程。</p><ul><li><code>ps aux</code>: 显示系统中所有用户的全部进程，信息非常详细。通常与 <code>grep</code> 结合使用。</li><li><code>ps aux | grep nginx</code>: 查找与 <code>nginx</code> 相关的所有进程。</li></ul></li><li><p><strong><code>top</code></strong> / <strong><code>htop</code></strong> - 实时显示系统进程动态。</p><ul><li><code>top</code>: 经典的进程监视器，显示 CPU、内存占用率等。</li><li><code>htop</code>: <code>top</code> 的增强版，提供更友好的交互界面和更丰富的功能（可能需要单独安装）。</li></ul></li><li><p><strong><code>kill</code></strong> - 终止进程。</p><ul><li><code>kill 12345</code>: 向进程 ID 为 <code>12345</code> 的进程发送终止信号（SIGTERM），让其优雅退出。</li><li><code>kill -9 12345</code>: 向进程发送强制杀死信号（SIGKILL）。<strong>这是一种最后的手段</strong>，因为它不会给进程清理资源的机会。</li></ul></li></ol><h3 id="权限与用户管理-保障系统安全" tabindex="-1">权限与用户管理：保障系统安全 <a class="header-anchor" href="#权限与用户管理-保障系统安全" aria-label="Permalink to &quot;权限与用户管理：保障系统安全&quot;">​</a></h3><p>正确配置权限是系统安全的第一道防线。</p><ol start="17"><li><p><strong><code>chmod</code></strong> - 修改文件或目录的权限。</p><ul><li><code>chmod +x deploy.sh</code>: 为 <code>deploy.sh</code> 脚本添加可执行权限。</li><li><code>chmod 644 config.yaml</code>: 将文件权限设置为 <code>rw-r--r--</code>（所有者读写，组用户和其他用户只读）。</li></ul></li><li><p><strong><code>chown</code></strong> - 更改文件或目录的所有者和所属组。</p><ul><li><code>chown www-data:www-data /var/www/html</code>: 将目录所有权赋予 <code>www-data</code> 用户和组。</li></ul></li><li><p><strong><code>sudo</code></strong> - 以超级用户（root）权限执行命令。</p></li></ol><h3 id="网络诊断与连接-确保服务联通" tabindex="-1">网络诊断与连接：确保服务联通 <a class="header-anchor" href="#网络诊断与连接-确保服务联通" aria-label="Permalink to &quot;网络诊断与连接：确保服务联通&quot;">​</a></h3><ol start="20"><li><p><strong><code>ping</code></strong> - 测试与目标主机的网络连通性。</p><ul><li><code>ping google.com</code></li></ul></li><li><p><strong><code>curl</code></strong> -强大的 URL 传输工具，可用于 API 测试、文件下载等。</p><ul><li><code>curl https://api.github.com</code></li></ul></li><li><p><strong><code>ssh</code></strong> - 安全地远程登录到另一台主机。</p><ul><li><code>ssh user@your-server-ip</code></li></ul></li><li><p><strong><code>scp</code></strong> - 在本地和远程主机之间安全地复制文件。</p><ul><li><code>scp local_file.txt user@remote_host:/remote/path/</code></li></ul></li><li><p><strong><code>ip</code></strong> / <strong><code>ifconfig</code></strong> - 查看和管理网络接口。</p><ul><li><code>ip a</code> 或 <code>ifconfig</code>: 显示所有网络接口的 IP 地址和状态（<code>ip</code> 是更现代的命令）。</li></ul></li><li><p><strong><code>netstat</code></strong> / <strong><code>ss</code></strong> - 显示网络连接、路由表、接口统计等信息。</p><ul><li><code>ss -tuln</code>: 显示所有正在监听的 TCP 和 UDP 端口（<code>ss</code> 是 <code>netstat</code> 的现代替代品，速度更快）。</li></ul></li></ol><h3 id="系统信息与性能监控" tabindex="-1">系统信息与性能监控 <a class="header-anchor" href="#系统信息与性能监控" aria-label="Permalink to &quot;系统信息与性能监控&quot;">​</a></h3><ol start="26"><li><p><strong><code>df</code></strong> - 查看磁盘空间使用情况。</p><ul><li><code>df -h</code>: 以人类可读的格式显示。</li></ul></li><li><p><strong><code>du</code></strong> - 估算文件和目录的磁盘使用空间。</p><ul><li><code>du -sh /var/log</code>: <code>-s</code> (summary) 统计总大小，<code>-h</code> (human-readable) 易读格式。</li></ul></li><li><p><strong><code>uptime</code></strong> - 显示系统已运行时间、登录用户数和平均负载。</p></li><li><p><strong><code>uname</code></strong> - 显示系统内核和操作系统信息。</p><ul><li><code>uname -a</code>: 显示所有可用信息。</li></ul></li><li><p><strong><code>free</code></strong> - 显示系统内存使用情况。</p><ul><li><code>free -h</code>: 以易读格式显示。</li></ul></li></ol><h3 id="归档与压缩" tabindex="-1">归档与压缩 <a class="header-anchor" href="#归档与压缩" aria-label="Permalink to &quot;归档与压缩&quot;">​</a></h3><ol start="31"><li><p><strong><code>tar</code></strong> - 打包和解包 <code>.tar</code> 文件，通常与压缩结合。</p><ul><li><code>tar -czvf archive.tar.gz /path/to/dir</code>: 将目录打包并用 <code>gzip</code> 压缩。</li><li><code>tar -xzvf archive.tar.gz</code>: 解压并解包。</li></ul></li><li><p><strong><code>zip</code> / <code>unzip</code></strong> - 创建和解压 <code>.zip</code> 文件。</p></li></ol><h3 id="shell-高级技巧与数据流处理" tabindex="-1">Shell 高级技巧与数据流处理 <a class="header-anchor" href="#shell-高级技巧与数据流处理" aria-label="Permalink to &quot;Shell 高级技巧与数据流处理&quot;">​</a></h3><p>这些命令通常通过管道符 <code>|</code> 串联起来，构建强大的数据处理流水线。</p><ol start="33"><li><p><strong><code>history</code></strong> - 查看历史执行过的命令。</p></li><li><p><strong><code>alias</code></strong> - 为长命令创建别名。</p><ul><li><code>alias ll=&#39;ls -lAh&#39;</code></li></ul></li><li><p><strong><code>export</code> / <code>env</code></strong> - 管理环境变量。</p><ul><li><code>export DATABASE_URL=&quot;user:pass@host/db&quot;</code>: 设置环境变量。</li><li><code>env | grep &#39;PATH&#39;</code>: 查看包含&#39;PATH&#39;的环境变量。</li></ul></li><li><p><strong><code>awk</code></strong> - 强大的文本行处理工具，擅长按列处理数据。</p><ul><li><code>awk &#39;{print $1, $7}&#39; access.log</code>: 打印 Nginx 日志的第一列（IP）和第七列（URL）。</li></ul></li><li><p><strong><code>sed</code></strong> - 流编辑器，用于对文本进行替换、删除等操作。</p><ul><li><code>sed -i &#39;s/old-text/new-text/g&#39; file.txt</code>: 在文件中直接替换文本。</li></ul></li><li><p><strong><code>cut</code></strong> - 按列剪切文本。</p><ul><li><code>cut -d&#39;:&#39; -f1 /etc/passwd</code>: 以冒号为分隔符，提取 <code>/etc/passwd</code> 文件的第一列（用户名）。</li></ul></li><li><p><strong><code>sort</code></strong> - 对文本行进行排序。</p></li><li><p><strong><code>uniq</code></strong> - 报告或省略重复的行。</p><ul><li><code>uniq -c</code>: 统计每行出现的次数。</li></ul></li></ol><p><strong>组合使用示例</strong>：统计访问日志中访问量最高的 10 个 IP。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>掌握这些命令，并非要你成为一个命令行“大师”，而是为了在遇到问题时，能有清晰的思路和趁手的工具去分析和解决。命令行是赋予开发者精确控制系统能力的强大工具。</p>',29)]))}const k=e(t,[["render",s]]);export{h as __pageData,k as default};
