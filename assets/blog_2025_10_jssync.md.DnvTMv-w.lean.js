import{_ as a,C as n,c as l,o as e,G as t,a9 as p}from"./chunks/framework.DsVI9alt.js";const u=JSON.parse('{"title":"JavaScript 运行机制详解：再谈 Event Loop","description":"本文从经典的 Promise 与 setTimeout 执行顺序问题入手，深入浅出地剖析了 JavaScript 的单线程模型、事件循环（Event Loop）机制。通过辨析宏任务与微任务的区别与优先级，帮助你彻底理解 JS 异步执行的底层原理，看懂页面卡顿的真相。","frontmatter":{"title":"JavaScript 运行机制详解：再谈 Event Loop","description":"本文从经典的 Promise 与 setTimeout 执行顺序问题入手，深入浅出地剖析了 JavaScript 的单线程模型、事件循环（Event Loop）机制。通过辨析宏任务与微任务的区别与优先级，帮助你彻底理解 JS 异步执行的底层原理，看懂页面卡顿的真相。","tags":["JavaScript","浏览器","事件循环","Promise","异步机制"],"head":[["link",{"rel":"canonical","href":"https://stack.mcell.topblog/2025/10_jssync"}],["meta",{"property":"og:url","content":"https://stack.mcell.topblog/2025/10_jssync"}]]},"headers":[],"relativePath":"blog/2025/10_jssync.md","filePath":"blog/2025/10_jssync.md","lastUpdated":1758819637000}'),r={name:"blog/2025/10_jssync.md"};function h(o,s,k,c,d,E){const i=n("VideoEmbed");return e(),l("div",null,[t(i,{url:"https://youtu.be/cCOL7MC4Pl0?si=fwgtpeQNmohgyjEZ",title:"Jake Archibald: 在循环 - JSConf.Asia"}),s[0]||(s[0]=p("",45))])}const y=a(r,[["render",h]]);export{u as __pageData,y as default};
