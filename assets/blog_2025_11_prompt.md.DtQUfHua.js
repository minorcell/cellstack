import{_ as s,c as a,o as e,a6 as p}from"./chunks/framework.CBA1pFat.js";const l="/assets/020.BQiw1TFo.jpg",h=JSON.parse('{"title":"提示工程（Prompt Engineering）入门指南 - 让AI懂你所想","description":"基于Claude Code官方文档提炼的最实用提示工程技巧。从基础的清晰指令、提供范例，到进阶的思考链、角色设定，全面提升AI交互效果和工作效率。","frontmatter":{"title":"提示工程（Prompt Engineering）入门指南 - 让AI懂你所想","description":"基于Claude Code官方文档提炼的最实用提示工程技巧。从基础的清晰指令、提供范例，到进阶的思考链、角色设定，全面提升AI交互效果和工作效率。","tags":["提示工程","Prompt Engineering","Claude Code","AI交互","人工智能","大语言模型","LLM","思考链","角色设定","AI工具","效率提升","实用技巧"],"author":"mCell","head":[["link",{"rel":"canonical","href":"https://stack.mcell.topblog/2025/11_prompt"}],["meta",{"property":"og:url","content":"https://stack.mcell.topblog/2025/11_prompt"}]]},"headers":[],"relativePath":"blog/2025/11_prompt.md","filePath":"blog/2025/11_prompt.md","lastUpdated":1756227164000}'),t={name:"blog/2025/11_prompt.md"};function i(r,n,o,c,u,b){return e(),a("div",null,n[0]||(n[0]=[p('<p><img src="'+l+`" alt="020.jpg" loading="lazy"></p><h1 id="提示工程-prompt-engineering-入门指南" tabindex="-1">提示工程（Prompt Engineering）入门指南 <a class="header-anchor" href="#提示工程-prompt-engineering-入门指南" aria-label="Permalink to &quot;提示工程（Prompt Engineering）入门指南&quot;">​</a></h1><blockquote><p>这篇指南是我从 <a href="https://docs.anthropic.com/zh-CN/docs/build-with-claude/prompt-engineering/overview" target="_blank" rel="noreferrer">Claude Code 官方文档</a> 中提炼出最核心的技巧，从基础的“清晰指令”和“提供范例”，到进阶的“思考链”和“角色设定”，帮助你将 AI 这个强大的工具，变成你工作流中不可或缺的伙伴。如果你想让 AI 真正懂你所想，这篇文章正是你需要的入门手册。</p></blockquote><p>最近一年，大语言模型（LLM）的发展，正在深刻地改变我们获取信息和创造内容的方式。无论是 Claude、GPT、Gemini 还是国内的各种模型，AI 已经成为许多人工作中不可或缺的伙伴。</p><p>但是，AI 的能力并非无限，它的表现好坏，直接取决于我们向它提出的问题和指令，也就是“提示词”（Prompt）。如何写出高质量的提示词，让 AI 更好地为我们服务？这就是“提示工程”（Prompt Engineering）这门新兴学问所研究的。</p><p>今天，我想系统地梳理一下 AI 公司 Anthropic（Claude 的开发者）官方文档里的一系列文章，将他们的最佳实践，总结成一份人人都能看懂的入门指南。</p><h2 id="一、基础原则-清晰、具体、有范例" tabindex="-1">一、基础原则：清晰、具体、有范例 <a class="header-anchor" href="#一、基础原则-清晰、具体、有范例" aria-label="Permalink to &quot;一、基础原则：清晰、具体、有范例&quot;">​</a></h2><p>与 AI 沟通，最基本的要求就是清晰。你必须把它当成一个非常聪明、但极度缺乏背景知识、并且会严格按字面意思理解你话语的实习生。</p><h3 id="_1-1-指令要直接明确" tabindex="-1">1.1 指令要直接明确 <a class="header-anchor" href="#_1-1-指令要直接明确" aria-label="Permalink to &quot;1.1 指令要直接明确&quot;">​</a></h3><p>避免使用模糊、口语化的表达。你需要明确告诉它“做什么”、“以什么格式”。</p><blockquote><p><strong>（不推荐）</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>总结一下这篇文章。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><em>(点评：总结成多长？要点是什么？给谁看？AI 不得不猜测你的意图。)</em></p></blockquote><blockquote><p><strong>（推荐）</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>请将以下文章总结成 5 个要点，每个要点不超过 30 个字，面向的读者是对这个领域不了解的初学者。</span></span>
<span class="line"><span>[此处附上文章内容]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote><h3 id="_1-2-提供示例-few-shot-prompting" tabindex="-1">1.2 提供示例（Few-shot Prompting） <a class="header-anchor" href="#_1-2-提供示例-few-shot-prompting" aria-label="Permalink to &quot;1.2 提供示例（Few-shot Prompting）&quot;">​</a></h3><p>“Show, don&#39;t tell.”（展示，而非说教）。如果你需要 AI 完成特定格式或风格的任务，最好的方法就是给它一两个完整的范例。</p><blockquote><p><strong>（示例：提取 JSON 数据）</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>从以下文本中提取关键信息，并以 JSON 格式输出。请参考下面的示例。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;example&gt;</span></span>
<span class="line"><span>文本: &quot;张三的邮箱是 zhangsan@example.com，他的电话是 13800138000。&quot;</span></span>
<span class="line"><span>JSON:</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>&quot;name&quot;: &quot;张三&quot;,</span></span>
<span class="line"><span>&quot;email&quot;: &quot;zhangsan@example.com&quot;,</span></span>
<span class="line"><span>&quot;phone&quot;: &quot;13800138000&quot;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/example&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>现在，请处理以下文本：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;李四的电话是 13900139000，邮箱是 lisi@example.com。&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>AI 会很轻松地学会这个模式，并输出正确的 JSON。</p></blockquote><h3 id="_1-3-使用-xml-标签构建结构" tabindex="-1">1.3 使用 XML 标签构建结构 <a class="header-anchor" href="#_1-3-使用-xml-标签构建结构" aria-label="Permalink to &quot;1.3 使用 XML 标签构建结构&quot;">​</a></h3><p>当你的提示词包含多个部分（比如，背景信息、示例文档、具体问题、格式要求）时，使用 XML 标签可以极大地帮助 AI 理解结构，避免混淆。</p><blockquote><p><strong>（示例：分析报告）</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;document&gt;</span></span>
<span class="line"><span>[这里放入一篇很长的分析报告...]</span></span>
<span class="line"><span>&lt;/document&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;instructions&gt;</span></span>
<span class="line"><span>你是一位资深的行业分析师。请阅读上面的 &lt;document&gt;，并回答以下问题：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. 这份报告的核心结论是什么？</span></span>
<span class="line"><span>2. 报告中提到的主要风险有哪些？</span></span>
<span class="line"><span>3. 报告作者的语气是乐观还是悲观？请用文中的例子说明。</span></span>
<span class="line"><span>&lt;/instructions&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>这种结构化的输入，远比把所有文字混在一起要有效。</p></blockquote><h2 id="二、进阶技巧-引导-ai-思考" tabindex="-1">二、进阶技巧：引导 AI 思考 <a class="header-anchor" href="#二、进阶技巧-引导-ai-思考" aria-label="Permalink to &quot;二、进阶技巧：引导 AI 思考&quot;">​</a></h2><p>对于复杂的、需要推理的任务，仅仅给出清晰的指令是不够的。我们还需要引导 AI 的“思考过程”。</p><h3 id="_2-1-设定角色-system-prompts" tabindex="-1">2.1 设定角色（System Prompts） <a class="header-anchor" href="#_2-1-设定角色-system-prompts" aria-label="Permalink to &quot;2.1 设定角色（System Prompts）&quot;">​</a></h3><p>在所有指令的最前面，你可以设置一个“系统提示”（System Prompt）。它用来定义 AI 在整个对话中应该扮演的角色、遵循的规则和风格。这就像是为 AI 设置了“出厂默认值”。</p><blockquote><p><strong>（示例：技术文章写作助手）</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>System: 你是一位专业的科技文章作者，你的写作风格简洁、严谨，擅长用类比来解释复杂的技术概念。在所有的回答中，请避免使用过于情绪化和口语化的词语。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在这个 System Prompt 之后，你再提出的问题，AI 的回答都会遵循这个设定好的角色和风格。</p></blockquote><h3 id="_2-2-任务分解与链式提示-chain-prompts" tabindex="-1">2.2 任务分解与链式提示（Chain Prompts） <a class="header-anchor" href="#_2-2-任务分解与链式提示-chain-prompts" aria-label="Permalink to &quot;2.2 任务分解与链式提示（Chain Prompts）&quot;">​</a></h3><p>不要指望 AI 一步到位地解决一个复杂问题。更可靠的方法是，将复杂任务分解成一系列更小的、连续的步骤，形成一个“提示链”。上一步的输出，可以作为下一步的输入。</p><blockquote><p><strong>（示例：市场分析报告流程）</strong></p><ol><li><strong>第一步（提取数据）</strong>：“请从这份财报中提取所有的关键财务指标，以 Markdown 表格形式呈现。”</li><li><strong>第二步（分析数据）</strong>：“根据上一步的表格，计算同比增长率和利润率，并分析其变化趋势。”</li><li><strong>第三步（生成摘要）</strong>：“综合以上分析，为公司 CEO 写一份不超过 200 字的摘要，重点说明公司的优势和潜在风险。”</li></ol></blockquote><h3 id="_2-3-思考链-chain-of-thought" tabindex="-1">2.3 “思考链”（Chain of Thought） <a class="header-anchor" href="#_2-3-思考链-chain-of-thought" aria-label="Permalink to &quot;2.3 “思考链”（Chain of Thought）&quot;">​</a></h3><p>这是目前最强大的提示技巧之一。当你要求 AI 解决一个逻辑题或数学题时，不要直接让它给答案，而是<strong>要求它“一步步地思考”</strong>，并把思考过程写出来。</p><blockquote><p><strong>（示例：解决逻辑题）</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>问题：一个篮子里有苹果和香蕉，总共 20 个水果。苹果的数量是香蕉的 3 倍。</span></span>
<span class="line"><span>请问苹果和香蕉各有多少个？</span></span>
<span class="line"><span>请不要直接给出答案。请先一步步地列出你的思考过程，最后再给出结论。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>AI 可能会这样回答：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>好的，让我一步步来思考这个问题。</span></span>
<span class="line"><span>第一步：定义变量。设香蕉的数量为 x。</span></span>
<span class="line"><span>第二步：根据题意，苹果的数量是香蕉的 3 倍，所以苹果的数量是 3x。</span></span>
<span class="line"><span>第三步：水果总数是 20，所以可以列出方程：x + 3x = 20。</span></span>
<span class="line"><span>第四步：解方程。4x = 20，所以 x = 5。</span></span>
<span class="line"><span>第五步：计算苹果的数量。苹果数量是 3x，所以是 3 \\* 5 = 15。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>结论：因此，篮子里有 5 个香蕉和 15 个苹果。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这个过程不仅让答案更可靠，也让我们能够检查它的逻辑是否正确。</p></blockquote><h2 id="三、特定场景-处理长文本" tabindex="-1">三、特定场景：处理长文本 <a class="header-anchor" href="#三、特定场景-处理长文本" aria-label="Permalink to &quot;三、特定场景：处理长文本&quot;">​</a></h2><p>现代 AI 已经可以处理非常长的上下文（比如一整本书或一份几百页的文档）。但在处理长文本时，也有一些技巧。</p><ul><li><strong>指令后置</strong>：将你的具体问题或指令，放在长篇文档的<strong>末尾</strong>。因为模型通常对输入内容的开头和结尾最“敏感”。</li><li><strong>先提问，后填充</strong>：你可以先构造好你的问题框架，然后再把长篇文档插入。例如：<code>“根据下面的文档，请回答 XXX 问题。[文档内容]”</code>。</li><li><strong>引导性提问</strong>：不要只让 AI “总结文档”，而应该就文档内容提出具体、有针对性的问题，引导它去阅读和分析你最关心的部分。</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>提示工程不是什么神秘的魔法，它是一门关于如何“清晰、结构化地表达自己意图”的学问。</p><p>回顾一下，核心要点包括：</p><ul><li><strong>基础</strong>：指令清晰、提供范例、使用标签。</li><li><strong>进阶</strong>：设定角色、分解任务、引导思考过程。</li><li><strong>长文本</strong>：指令后置、引导性提问。</li></ul><p>AI 是我们思想的“放大器”，而提示工程就是控制这个放大器的操作手册。掌握它，你就能让这个强大的工具，发挥出远超想象的威力。</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://docs.anthropic.com/zh-CN/docs/build-with-claude/prompt-engineering" target="_blank" rel="noreferrer">Anthropic, Prompt Engineering</a></li><li><a href="https://docs.anthropic.com/zh-CN/docs/build-with-claude/prompt-engineering/system-prompts" target="_blank" rel="noreferrer">Anthropic, System Prompts</a></li><li><a href="https://docs.anthropic.com/zh-CN/docs/build-with-claude/prompt-engineering/chain-of-thought" target="_blank" rel="noreferrer">Anthropic, Chain of Thought Prompting</a></li></ul><p>（完）</p>`,40)]))}const m=s(t,[["render",i]]);export{h as __pageData,m as default};
